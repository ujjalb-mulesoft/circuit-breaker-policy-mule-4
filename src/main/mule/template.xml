<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://www.mulesoft.org/schema/mule/core"
xmlns:os="http://www.mulesoft.org/schema/mule/os"
xmlns:http="http://www.mulesoft.org/schema/mule/http"
xmlns:http-policy="http://www.mulesoft.org/schema/mule/http-policy"
xmlns:http-transform="http://www.mulesoft.org/schema/mule/http-policy-transform"
xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core
http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http
http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/http-policy
http://www.mulesoft.org/schema/mule/http-policy/current/mule-http-policy.xsd
http://www.mulesoft.org/schema/mule/http-policy-transform
http://www.mulesoft.org/schema/mule/http-policy-transform/current/mule-http-policy-transform.xsd
http://www.mulesoft.org/schema/mule/os
http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">

 <!-- Object Store configuration -->
 <os:object-store name="cbstore"
 persistent="true"
 entryTtl="1"
 entryTtlUnit="HOURS"/>


    <http-policy:proxy name="{{{policyId}}}-custom-policy">
        <http-policy:source>
           <try>
              <!-- Checking Cache for OPEN| HALF-OPEN stored value -->
              <os:retrieve key="circuit" target="circuit" objectStore="cbstore"/>
              <error-handler>
                 <on-error-continue type="OS:KEY_NOT_FOUND" logException="true"> 
                    <logger message="Circuit is CLOSED. Continue processing." />
                 </on-error-continue>
              </error-handler> 
            </try> 
            <choice>
              <when expression="#[((sizeOf(vars.circuit default '') == 0) or ((vars.circuit.timestamp default 0) + (&quot;PT$(vars.circuit.retryPeriod default 0)S&quot; as Period) &lt; now())) or ((vars.circuit.errorCount default 0) &lt; {{{failureThreshold}}})]">
                  <try>
                    <logger message="Before calling app" />
                    <http-policy:execute-next/>
                    <os:remove key="circuit" objectStore="cbstore"/>
                    <logger message="After calling app" />
                    <error-handler>
                      <on-error-propagate type="ANY" logException="true">
                                  <!-- Trip the Circuit -->
                                  <set-variable value='#[%dw 2.0
  output application/json
  --- 
  {
                                            "timeout": {{{timeout}}},
                                            "failureThreshold": {{{failureThreshold}}},
                                            "retryPeriod": {{{retryPeriod}}},
                                            "state": "OPEN",
                                            "timestamp": now(),
                                            "errorCount": ((vars.circuit.errorCount default 0) + 1)
                                           }]' variableName="circuit"/>
                                  <os:store key="circuit" objectStore="cbstore">
                                     <os:value>
                                         #[vars.circuit]
                                     </os:value>
                                  </os:store>
                                   <set-payload value='#["circuitBreaker": vars.circuit]' mimeType="application/json" />
                                  <!-- <http-transform:set-response statusCode="503">
                                      <http-transform:body>#["circuitBreaker": vars.circuit]</http-transform:body>
                                  </http-transform:set-response> -->
                      </on-error-propagate> 
                      <on-error-continue type="OS:KEY_NOT_FOUND" logException="true"> 
                        <logger message="Circuit is CLOSED. Continue processing." />
                      </on-error-continue>
                    </error-handler>
                  </try> 
                </when>
                <otherwise>
                   <set-payload value='#[%dw 2.0
  output application/json
  ---
  "circuitBreaker": vars.circuit]' mimeType="application/json" />
                  <!--<http-transform:set-response statusCode="503">
                      <http-transform:body>#["circuitBreaker": vars.circuit]</http-transform:body>
                  </http-transform:set-response> -->
                </otherwise>
            </choice>
        </http-policy:source>
    </http-policy:proxy>
</mule>